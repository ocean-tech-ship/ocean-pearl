name: Deploy Production

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.os }}

    timeout-minutes: 15

    strategy:
      matrix:
        os: [ ubuntu-latest,windows-latest,macos-latest ]
        node: [ 16.13 ]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v3.0.2

      - name: Setup node env 🏗
        uses: actions/setup-node@v3.1.1
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'

      - name: Install dependencies 👨🏻‍💻
        run: yarn install --frozen-lockfile --network-timeout 60000

      # - name: Run linter 👀
      #   run: yarn lint

      - name: Run tests 🧪
        run: yarn test:ci

      - name: Report test results 📈
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: 'Test results (${{ matrix.os }})'
          path: reports/jest-*.xml
          reporter: jest-junit

      # Disabled since we have almost no tests right now
      #- name: Report code coverage 🔍
      #  uses: romeovs/lcov-reporter-action@v0.2.21
      #  with:
      #    lcov-file: coverage/lcov.info
      #    github-token: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ${{ matrix.os }}

    timeout-minutes: 15

    strategy:
      matrix:
        os: [ ubuntu-latest,windows-latest,macos-latest ]
        node: [ 16.13 ]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v3.0.2

      - name: Setup node env 🏗
        uses: actions/setup-node@v3.1.1
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'

      - name: Install dependencies 👨🏻‍💻
        run: yarn install --frozen-lockfile --network-timeout 60000

      - name: Building project 🚧
        run: yarn build

  deploy:
    runs-on: ubuntu-latest

    timeout-minutes: 8

    needs:
      - test
      - build

    environment:
      name: production
      url: https://oceanpearl.io/

    concurrency:
      group: deploy-production

    steps:
      - run: echo "Deploying to production environment..."

      - name: Checkout 🛎
        uses: actions/checkout@v3.0.2

      - name: Deploy to Heroku 👾
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          branch: main
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          healthcheck: ${{ secrets.HEALTHCHECK_URL }}
          delay: 5

      - run: echo "Successfully deployed on production environment!"
